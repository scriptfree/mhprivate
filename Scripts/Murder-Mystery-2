game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Success";
                Text = "Thanks for using Manny Hub!";
                Duration = 2;})


local Library = loadstring(game:HttpGet("https://pastebin.com/raw/GdN5iRbt"))() 
local Window = Library.CreateLib("Manny Hub", "BloodTheme") 


local Tab1 = Window:NewTab("Main")
local Tab1Section = Tab1:NewSection("Configs")

local function teleportToGunDropAndBack()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")

    -- Find the Normal object and then the GunDrop part inside it
    local normalFolder = workspace:FindFirstChild("Normal")
    if normalFolder then
        local gunDrop = normalFolder:FindFirstChild("GunDrop")

        if gunDrop then
            -- Save the player's current position
            local savedPosition = rootPart.CFrame

            -- Teleport to the GunDrop part
            rootPart.CFrame = gunDrop.CFrame + Vector3.new(0, 2, 0) -- Teleport 3 units above the GunDrop part

            -- Wait for a brief moment to ensure the teleport is registered
            wait(0.1) -- Adjust the wait time as needed

            -- Teleport back to the saved position
            rootPart.CFrame = savedPosition
        else
            -- Display a notification if the GunDrop part is not found
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Notification";
                Text = "The gun has not been dropped yet.";
                Duration = 2;
            })
        end
    else
        -- Display a notification if the Normal folder is not found
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Title = "Notification";
            Text = "The Normal folder is not found in the workspace.";
            Duration = 2;
        })
    end
end


local collectedCoins = {}

-- Function to teleport the player slightly above each "Coin_Server" part
local function teleportToCoins()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")

    local coins = workspace:GetDescendants()
    local foundCoin = false

    for _, item in ipairs(coins) do
        if item:IsA("BasePart") and item.Name == "Coin_Server" and not collectedCoins[item] then
            rootPart.CFrame = item.CFrame + Vector3.new(0, 3, 0) -- Teleport 3 units above the coin
            collectedCoins[item] = true -- Mark this coin as collected
            foundCoin = true
            -- Wait until the coin is touched (simple simulation with a delay)
            wait(0.5) -- Simulate the time it takes to touch the coin
            break
        end
    end

    -- If a Coin_Server is found and touched, teleport back to the specified coordinates
    if foundCoin then
        rootPart.CFrame = CFrame.new(-112.5636215209961, 135.0230255126953, 18.94784164428711)
    end
end



local function updateHighlight(player)
    -- Check if the player has a character
    if player.Character then
        -- Find or create the highlight
        local highlight = player.Character:FindFirstChild("Highlight")
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "Highlight"
            highlight.Parent = player.Character
            highlight.OutlineTransparency = 0 -- Outline fully visible
            highlight.FillTransparency = 0.5 -- Semi-transparent fill
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop -- Always visible
        end
        
        -- Check the player's backpack and character for tools
        local hasKnife = false
        local hasGun = false
        
        if player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife")) then
            hasKnife = true
        end
        if player.Backpack:FindFirstChild("Gun") or (player.Character and player.Character:FindFirstChild("Gun")) then
            hasGun = true
        end

        -- Set the highlight color based on the tools
        if hasKnife then
            highlight.FillColor = Color3.new(1, 0, 0) -- Red fill color for Knife
            highlight.OutlineColor = Color3.new(1, 0, 0) -- Red outline color for Knife
        elseif hasGun then
            highlight.FillColor = Color3.new(0, 0, 1) -- Blue fill color for Gun
            highlight.OutlineColor = Color3.new(0, 0, 1) -- Blue outline color for Gun
        else
            highlight.FillColor = Color3.new(0.5, 0.5, 0.5) -- Grey fill color for others
            highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline color for others
        end
    end
end

-- Function to remove highlights from a specific player
local function removeHighlight(player)
    if player.Character then
        local highlight = player.Character:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end

-- Function to remove highlights from all players
local function removeAllHighlights()
    for _, player in pairs(game.Players:GetPlayers()) do
        removeHighlight(player)
    end
end

-- Function to update highlights for all players
local function updateAllHighlights()
    for _, player in pairs(game.Players:GetPlayers()) do
        updateHighlight(player)
    end
end

-- Function to set up event listeners for a player
local function setupPlayer(player)
    player.CharacterAdded:Connect(function()
        -- Delay to ensure player's tools have loaded
        wait(1)
        
        if getgenv().FLO then
            -- Add/update the highlight for the new player's character
            updateHighlight(player)
        else
            -- Remove the highlight if the toggle is off
            removeHighlight(player)
        end
        
        -- Update highlight if the player's backpack changes
        player.Backpack.ChildAdded:Connect(function()
            if getgenv().FLO then
                updateHighlight(player)
            else
                removeHighlight(player)
            end
        end)
        player.Backpack.ChildRemoved:Connect(function()
            if getgenv().FLO then
                updateHighlight(player)
            else
                removeHighlight(player)
            end
        end)
    end)
end

-- Event listener for new players joining
game.Players.PlayerAdded:Connect(function(player)
    setupPlayer(player)
end)

-- Setup existing players
for _, player in pairs(game.Players:GetPlayers()) do
    setupPlayer(player)
end

-- Toggle ESP
Tab1Section:NewToggle("ESP", ".", function(t)
    getgenv().FLO = t
    if getgenv().FLO then
        while getgenv().FLO do
            updateAllHighlights()
            wait(0.5)
        end
    else
        removeAllHighlights()
    end
end)

Tab1Section:NewToggle("Autofarm coins", ".", function(t)
    getgenv().FLO = t
    spawn(function()
        while getgenv().FLO do
            teleportToCoins()
            wait(2) -- Wait time to ensure the loop doesn't run too quickly
        end
    end)
end)



Tab1Section:NewButton("Teleport to gun", ".", function()

teleportToGunDropAndBack()

end)



Tab1Section:NewSlider("Speed Changer", "Walkspeed", 20, 16, function(ws)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ws
end)

Tab1Section:NewButton("Anti AFK", ".", function()

for a,b in pairs(getconnections(game.Players.LocalPlayer.Idled))do b:Disable()end
warn("anti afk loaded")

end)
